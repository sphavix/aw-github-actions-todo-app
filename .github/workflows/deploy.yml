name: Deploy to AWS ECS

on:
  push:
    branches:
      - main
env:
  AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
  AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
  AWS_REGION: ${{secrets.AWS_REGION}}
  ECS_CLUSTER: todoapp_cluster
  CONTAINER_NAME: todoapp
  ECS_SERVICE: todoapp_service
  ECS_TASK_DEFINITION: .github/workflows/todo-task-definition.json

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Confiure AWS Credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{secrets.AWS_REGION}}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a
        with:
          registry: ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.${{secrets.AWS_REGION}}.amazonaws.com

      - name: Build and push Docker image to ECR
        id: build-image
        env:
          ECR_REISTRY: ${{steps.login-ecr.outputs.registry}}
          ECR_REPOSITORY: "todoapp_repo"
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      
      - name: Fill in the new image ID in the Amazon ECS Task Definition
        id: task-def-1
        uses: aws-actions/amazon-ecs-render-task-definition@c804dfbdd57f713b6c079302a4c01db7017a36fc
        with:
          task-definition: ${{env.ECS_TASK_DEFINITION}}
          container-name: ${{env.CONTAINER_NAME}}
          image: ${{steps.build-image.outputs.image}}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
        with:
          task-definition: ${{steps.task-def-1.outputs.task-definition}}
          service: ${{env.ECS_SERVICE}}
          cluster: ${{env.ECS_CLSUTER}}
          wait-for-service-stability: false